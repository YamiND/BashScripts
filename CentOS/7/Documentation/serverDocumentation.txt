######################################
# TODO:  			     #
# Document SSHD chapter 	     #
# Remove unneccesary config options  #
######################################


##############################################
# 1. Network Setup - Configuring Interfaces  #
##############################################


########################################
# 1.1 Host OS - CentOS 7 (Bridging)    #
########################################

##########################################################
# In /etc/sysconfig/network-scripts/ifcfg-br0 (bridge 0) #
##########################################################

DEVICE=br0 # Set this to whatever you are calling the interface
TYPE=Bridge # The type of interface
IPADDR= # This will be the IP Address of the host OS (Static)
NETMASK= # Netmask of the host server
ONBOOT=yes # Enable the interface on boot
BOOTPROTO=none # No boot proto
NM_CONTROLLED=no # Not controlled by the built in garbage
DELAY=0 # No delay in bringup

#############################################
# In /etc/sysconfig/network-scripts/ifcfg-* #
# (whatever the interface is called)        #
# Ours is ifcfg-em1                         #
#############################################

TYPE=Ethernet # Type of interface 
BOOTPROTO="static" # static IP
NAME="em1" # Name of the interface
NM_CONTROLLED="no" # Not controlled by the built in garbage
UUID= # This should be auto generated
DEVICE=em1 # Name of the interface
ONBOOT="yes" # Enable the interface on boot
BRIDGE=br0 # Use the bridge br0 for the physical interface

#######################
# In /etc/resolv.conf #
#######################

nameserver 8.8.8.8
nameserver 8.8.4.4


###################################
# 1.2 VM Networking - CentOS 7    #
###################################

##################################################################
# In /etc/sysconfig/network-scripts/ifcfg-eth* (typically eth0): #
# The below should be used for the VMs        			 #
##################################################################

TYPE=Ethernet # This should be generated
BOOTPROTO=static # Set this to static for static IPs
PEERDNS=no # Set this to no and through the DNS servers in /etc/resolv.conf 
PEERROUTES=yes # This may not be needed
IPV4_FAILURE_FATAL=no # This may not be needed
IPV6INIT=yes # This may not be needed
IPV6_AUTOCONF=yes # This may not be needed
IPV6_DEFROUTE=yes # This may not be needed
IPV6_PEERDNS=yes # This may not be needed
IPV6_PEERROUTES=yes # This may not be needed
IPV6_FAILURE_FATAL=no # This may not be needed
IPADDR="" # Set the static IP here
NETMASK="" # Set the netmask here
GATEWAY="" # Set the gateway here
NAME=eth0 # This should be generated
UUID= # This should be generated
DEVICE=eth0 # This should be generated
ONBOOT=yes # This is probably no by default

###################################################################
# The file /etc/resolv.conf should have the following DNS servers #
###################################################################

nameserver 8.8.8.8
nameserver 8.8.4.4



############################
# 2. SELinux Configuration #
############################

###############################
# 2.1 Installing Dependencies #
###############################

##################################################
# You will need the policy utils package for     #
# SElinux configuration                          #
#                                                #
# You can install it with the following command: #
##################################################

yum -y install policycoreutils-python


#################
# 3. SSH Setup  #
#################


##########################
# 3.1 SSHD Configuration #
##########################

Port 1069
ListenAddress 0.0.0.0:1069

Protocol 2

HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

SyslogFacility AUTHPRIV

PermitRootLogin no

MaxAuthTries 3

AuthorizedKeysFile	.ssh/authorized_keys

PasswordAuthentication yes

ChallengeResponseAuthentication no

GSSAPIAuthentication yes
GSSAPICleanupCredentials no

UsePAM yes

UsePrivilegeSeparation sandbox

AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

Subsystem       sftp    /usr/libexec/openssh/sftp-server


#########################################
# 3.2 iptables rules for SSH (UNTESTED) #
#########################################

iptables -N SSHLOCK
iptables -A SSHLOCK -j LOG --log-prefix "Possible SSH attack! " --log-level 7
iptables -A SSHLOCK -j DROP


iptables -A INPUT -i em1 -p tcp -m state --dport 1069 --state NEW -m recent --set
iptables -A INPUT -i em1 -p tcp -m state --dport 1069 --state NEW -m recent --update --seconds 120 --hitcount 4 -j SSHLOCK



###############
# 4. KVM/QEMU #
###############


##################################
# 4.1 Installing and Configuring #
##################################


##########################################
# For KVM, you will need to install the  # 
# following packages		         #
# kvm					 #
# qemu-kvm 				 #
# python-virtinst			 #
# libvirt				 #
# libvirt-python			 #
# libguestfs-tools 			 #
##########################################

yum -y install kvm qemu-kvm python-virtinst libvirt libvirt-python libguestfs-tools

##########################################
# You're going to want to configure 	 #
# /etc/libvirt/qemu.conf 		 #
# and make the following changes for VNC #
# It's possible other changes may be     #
# made, but these are bare minimums      #
##########################################

vnc_listen = "0.0.0.0"
vnc_password = "passwordHere"


##################################
# 4.2 Creating a Virtual Machine #
##################################

########################################################
# We use virt-install to create our VMs 	       #
# Basically virt-install requires the following flags: #
# -n : Name of the Virtual Machine		       #
# --description : Description for the VM	       #
# --os-type : General platform (Windows/Linux/etc)     #
# --os-variant : Specific OS/Distribution (rhel7)      #
# --ram : Amount of RAM (in MB) 		       #
# --vcpus : Number of Virtual CPUs to assign           #
# --disk path= : Location where the VM will be stored  #
# and the size of the VM			       #
# The default location is /var/lib/libvirt/images/     #
# --graphics : Graphics type (you should select VNC)   #
# --cdrom : location of the bootable image             #
# --network : type of network interface		       #
# We use bridged with the br0 interface		       #
# Example would be --network bridge:br0		       #
# Below is an example setup			       #
########################################################


virt-install \
-n LTI_Test \
--description "Descriptino of the VM" \
--os-type=Linux \
--os-variant=rhel7 \
--ram=2048 \
--vcpus=2 \
--disk path="/var/lib/libvirt/images/LTI_Test.img,bus=virtio,size=10" \
--graphics vnc \
--cdrom /var/Centos-7-x86_64-Minimal-1503-01.iso \
--network bridge:br0 

################################
# 4.3 Remove a Virtual Machine #
################################

######################################################
# We will use the following commands to remove a VM: # 
# virsh destroy vmName				     #
# virsh undefine vmName				     #
# virsh vol-delete --pool vmPool vmNameFile	     #
# Below is an example of a deletion:		     #
######################################################

virsh destroy LTI_Test
virsh undefine LTI_Test
virsh vol-delete --pool default LTI_Test.img



